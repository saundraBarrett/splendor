{"version":3,"sources":["common/playerTypes.js","components/setup/playerSetup.js","components/setup/gameSetup.js","components/token/token.js","components/token/tokenStack.js","components/game/boardTokens.js","components/game/gamePlayers.js","assets/gems/sapphire.png","assets/gems/emerald.png","assets/gems/ruby.png","assets/gems/diamond.png","assets/gems/onyx.png","assets/gems/gold.png","common/gemImage.js","components/cards/card.js","components/cards/cardRow.js","nobles/noble.js","nobles/nobleRow.js","components/game/boardCards.js","components/game/gameDetails.js","components/game/board.js","components/token/emptyToken.js","components/player/playerTokens.js","components/player/playerSpace.js","App.js","redux/actions/index.js","common/constants.js","common/tokens.js","common/cards.js","common/nobles.js","helpers/index.js","redux/reducers/gameReducer.js","redux/reducers/index.js","redux/store.js","serviceWorker.js","index.js"],"names":["playerTypes","id","type","PlayerSetup","props","useState","i","name","player","updatePlayer","Fragment","FormControl","InputLabel","value","onChange","e","onChangePlayerType","_","map","playerType","Input","newPlayer","target","doneUpdatingPlayer","updatePlayerName","GameSetup","localPlayer","find","defaultPlayers","dispatch","useDispatch","players","updatePlayers","alert","playerindex","findIndex","p","playersCopy","playerInputs","length","push","onClick","htmlFor","defaultValue","inputProps","min","max","playerCount","tempPlayers","initial","updatePlayerCount","Token","className","t","onClickFunction","token","gem","qty","TokenStack","tokens","item","connect","state","gameTokens","game","chips","setChips","updateChipCount","useEffect","console","log","container","direction","active","points","GemImage","src","sapphire","emerald","ruby","diamond","onyx","gold","activePlayer","xs","card","cost","canAfford","window","confirm","takeCard","Box","display","m","bgcolor","victoryPoints","flexGrow","textAlign","justifyContent","alignSelf","g","CardRow","cards","rowCards","slice","Noble","noble","nobles","playerTakeCard","filter","GameDetails","fetch","then","response","error","Board","EmptyToken","PlayerTokens","style","marginLeft","gameState","START_GAME","REMOVE_TOKEN_FROM_BOARD","ADD_TOKEN_TO_BOARD","PLAYER_TAKE_CARD","PLAYER_RESERVE_CARD","END_PLAYER_TURN","GREEN","BLUE","RED","WHITE","BLACK","YELLOW","tokenQty","goldQty","Constants","level","imageCode","getRandomInt","Math","floor","random","shuffleCards","list","shuffle","initialState","combineReducers","action","firstTurn","assign","gems","reserved","includes","x","tokenIndex","cardIndex","cloneCards","splice","currentPlayer","nextPlayerIndex","store","configureStore","reducer","rootReducer","devTools","process","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eaeee8ec.chunk.js","sourcesContent":["// Keeps track of player types\nconst playerTypes = [\n    {\n        id:1,\n        type: 'Local'\n    },\n    {\n        id:2,\n        type: 'Robot'\n    },\n    {\n        id: 3,\n        type: 'Remote'\n    }\n]\n\nexport default playerTypes;","import React, { useState } from 'react';\nimport { FormControl, Input, InputLabel } from '@material-ui/core';\nimport _ from 'lodash';\nimport playerTypes from '../../common/playerTypes';\n\n// player dropdown seletion for type imported from common goodies\nconst PlayerSetup = (props) => {\n    const [player, updatePlayer] = useState({\n        id: props.i,\n        type: props.type,\n        name: props.name\n    })\n\n    const updatePlayerName = e => {\n        let newPlayer = player; // copying the old datas array\n        newPlayer.name = e.target.value\n        updatePlayer(newPlayer)\n        props.doneUpdatingPlayer(player)\n    }\n\n    return (\n        <React.Fragment>\n        <FormControl key={`player-type-${props.i}`} name={`player-type-${props.i}`} >\n            <InputLabel id=\"label\">Player Type:</InputLabel>\n            <select id={props.i} value={0} onChange={(e) => props.onChangePlayerType(e)}>\n                {_.map(playerTypes, function (playerType) {\n                    return <option key={props.i + playerType.id} value={playerType.id}>{playerType.type}</option>\n                })}\n            </select>\n        </FormControl>\n        <FormControl key={`player-name-${props.i}`} name={`player-name-${props.i}`}>\n            <InputLabel>Player Name:</InputLabel>\n            <Input onChange={(e) => updatePlayerName(e)}></Input>\n        </FormControl>\n        </React.Fragment>\n    )\n}\n\nexport default PlayerSetup;","import React, { useState } from 'react';\nimport { FormControl, Input, InputLabel } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport _ from 'lodash';\nimport PlayerSetup from './playerSetup';\nimport playerTypes from '../../common/playerTypes';\n\n// Set up game by getting number of players, 4 max\nfunction GameSetup(props) {\n    // find local player type from player types\n    const localPlayer = _.find(playerTypes, { 'type': 'Local'});\n\n    // setting default players (2) to local type\n    const defaultPlayers = [\n        { id: 0, type: localPlayer.id },\n        { id: 1, type: localPlayer.id }\n    ]\n\n    const dispatch = useDispatch()\n    const [players, updatePlayers] = useState(defaultPlayers);\n\n    const onChangePlayerType = e => {\n        // Change player type to local\n        if (e.target.value !== localPlayer.id) {\n            alert('Only local players allowed now!')\n        }\n    };\n\n    // when updating player data, save state variable\n    const doneUpdatingPlayer = player => {\n        let playerindex = _.findIndex(players, function(p) {\n            return p.id == player.id\n        })\n        let playersCopy = [...players];\n        playersCopy[playerindex] = player;\n        updatePlayers(playersCopy)\n    }\n\n    const updatePlayerCount = playerCount => {\n        // Add player and set as local player\n        if (playerCount > players.length) {\n            updatePlayers([\n                ...players, { type: localPlayer.id }\n            ])\n        }\n        // Remove player\n        else if (playerCount < players.length) {\n            // intiial function from lodash removes last item from array\n            let tempPlayers = _.initial(players)\n            updatePlayers(tempPlayers)\n        }\n    }\n\n    // set up player select list, rendered as playerInputs\n    const playerInputs = [];\n    for (let i = 0; i < players.length; i++) {\n        playerInputs.push(\n            <PlayerSetup i={i} type={localPlayer.id} onChangePlayerType={onChangePlayerType} doneUpdatingPlayer={doneUpdatingPlayer}/>\n        )\n    }\n\n    return (\n        <div key=\"test\">\n            <button onClick={() => dispatch({ type: 'START_GAME', players: players })} >Start Game</button>\n            <FormControl>\n                <InputLabel htmlFor=\"number-of-players\" >Number of Players</InputLabel>\n                <Input id=\"number-of-players\" defaultValue=\"2\" type=\"number\" inputProps={{ min: \"2\", max: \"4\" }} onChange={(e) => updatePlayerCount(e.target.value)} />\n            </FormControl>\n            {playerInputs}\n        </div>\n    )\n}\n\nexport default GameSetup;","import React from 'react';\n\n// Display token\nconst Token = (props) => {\n    return (\n        <div className=\"token-container\" onClick={(t) => props.onClickFunction(props.token.id)}>\n            <div className={\"token token-\"+props.token.gem}>\n            <div className={\"count-\"+props.token.qty}>{props.token.qty}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Token;","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport Token from './token';\n\nfunction TokenStack(props) {\n\n    let tokens = []\n    // update to prop.token.qty when you want a stack of chips\n    for (let i = 0; i < 1; i++) {\n        tokens.push(<Token token={props.token} onClickFunction={props.onClickFunction} />)\n    }\n\n    return (\n        <Grid item className=\"token-stack\">\n            {tokens}\n        </Grid>\n\n    )\n}\n\nexport default TokenStack;","import React, {useState, useEffect} from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport TokenStack from '../token/tokenStack';\n\n// get game variables from redux store\nconst mapStateToProps = (state) => {\n    return { gameTokens: state.game.tokens }\n}  \n\nfunction BoardTokens(props) {\n    // dispatch functionality from redux store\n    const dispatch = useDispatch()\n    const [chips, setChips] = useState([]);\n\n    const updateChipCount = e => {\n        setChips(\n            chips => [...chips, e]\n        )\n    };\n\n    useEffect(() => {\n        if (chips.length === 3 ) {\n            console.log('turn needs to be done')\n            dispatch({type:'REMOVE_TOKEN_FROM_BOARD', chips})\n            dispatch({type: 'END_PLAYER_TURN' })\n            setChips([])\n        }\n        // Update the document title using the browser API\n        console.log(`You clicked ${chips} times`);\n      });\n\n    return (\n        <Grid container direction=\"column\">\n            {chips >= 3 ? \"Your turn is done\" : 'Keep gping'}\n            { props.gameTokens.map((token, i) => {\n                return (<TokenStack token={token} i={i} onClickFunction={updateChipCount}/>)\n            })}\n        </Grid>\n    )\n}\n\nexport default connect(mapStateToProps)(BoardTokens);","/* Display Player Tokens */\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n    return { players: state.game.players }\n}\n\nfunction GamePlayers(props) {\n    return (\n        <Grid container direction=\"column\">\n            { props.players.map((player, i) => {\n                return <div className={\"player-card_\"+i} active={player.active ? \"true\": \"false\"} key={\"player-card_\"+i}>\n                    <div className=\"points\">{player.points}</div>\n                </div>\n            })}\n        </Grid>\n    )\n}\n\nexport default connect(mapStateToProps)(GamePlayers)\n","export default __webpack_public_path__ + \"static/media/sapphire.5361b8d5.png\";","export default __webpack_public_path__ + \"static/media/emerald.84aea5eb.png\";","export default __webpack_public_path__ + \"static/media/ruby.1ccb5125.png\";","export default __webpack_public_path__ + \"static/media/diamond.3a412abc.png\";","export default __webpack_public_path__ + \"static/media/onyx.1a6421b0.png\";","export default __webpack_public_path__ + \"static/media/gold.6237158e.png\";","import sapphire from '../assets/gems/sapphire.png';\nimport emerald from '../assets/gems/emerald.png';\nimport ruby from '../assets/gems/ruby.png';\nimport diamond from '../assets/gems/diamond.png';\nimport onyx from '../assets/gems/onyx.png';\nimport gold from '../assets/gems/gold.png';\n\n// return image to be used in different places\nconst GemImage = (props) => {\n    switch (props.gem) {\n        case \"SAPPHIRE\":\n            return <img src={sapphire} />\n            break;\n        case \"EMERALD\":\n            return <img src={emerald} />\n            break;\n        case \"RUBY\":\n            return <img src={ruby} />\n            break;\n        case \"DIAMOND\":\n            return <img src={diamond} />\n            break;\n        case \"ONYX\":\n            return <img src={onyx} />\n            break;\n        case \"GOLD\":\n            return <img src={gold} />\n            break;\n        default:\n            return null\n            break;\n    }\n}\n\nexport default GemImage;","import { Box, Grid, Paper } from '@material-ui/core';\nimport { connect, useDispatch } from 'react-redux';\nimport GemImage from '../../common/gemImage';\nimport _ from 'lodash';\nimport React from 'react';\n\n// get active player\nconst mapStateToProps = (state) => {\n    return { activePlayer: _.find(state.game.players, {active : true}) }\n}  \n// Display card\n// Setting up as a grid item from @material-ui\nfunction Card(props) {\n\n    const dispatch = useDispatch()\n\n    function takeCard(props) {\n        // check if active player has enough to take the card\n        // if they do, take it\n        // if they don't - offer to reserve it?\n        console.log(props.activePlayer)\n        console.log(props.card.cost)\n        let card = props.card\n        let canAfford = true;\n        for (let i = 0; i < props.card.cost.length; i++) {\n            console.log(props.card.cost[i])\n            console.log(props.card.cost[i].gem)\n            // if players tokens + cards with matching gem is less than the cost of the card, dont process\n            let activePlayerGemCount = _.find(props.activePlayer.tokens, {\"gem\": props.card.cost[i].gem}).qty + _.find(props.activePlayer.tokens, {\"gem\": props.card.cost[i].gem}).qty\n           if (activePlayerGemCount < props.card.cost[i].qty) {\n               if (window.confirm('You can not afford this card. Would you like to reserve it? Note: this will end your turn')) {\n                console.log('reserve') \n                canAfford = false;\n                // disoatch reserver card\n                //confirm(\"You dont have enought to buy this card. Do you want to reserve it? \")\n                dispatch({type:'PLAYER_RESERVE_CARD', card})\n               }\n               else {\n                   canAfford = false\n                   console.log(\"d nothingggggg\")\n               }\n               break;\n            }\n        }\n        if (canAfford) {\n            \n            dispatch({type:'PLAYER_TAKE_CARD', card})\n        }\n    }\n    \n    return (\n        <Grid item xs className=\"card-container\" onClick={() => takeCard(props)}>\n            <Box\n                className={'card card-' + props.card.gem}\n                display=\"flex\"\n                p={2}\n                m={2}\n                bgcolor=\"background.paper\" >\n                {props.card.victoryPoints !== 0 ? <Box className=\"victory-points\"> {props.card.victoryPoints} </Box> : null}\n                <Box flexGrow={1} textAlign=\"right\" className=\"gem-container\"  justifyContent=\"flex-end\" >\n                    <GemImage gem={props.card.gem} />   \n                </Box>\n            </Box>\n            <Box>\n            <Box alignSelf=\"flex-end\" className=\"cost-container\">\n                {_.map(props.card.cost, function (g) {\n                    return <div className={\"cost cost-\" + g.gem}>\n                        <span className=\"quantity\">{g.qty}</span>\n                    </div>\n                })}\n            </Box>\n            </Box>\n        </Grid >\n\n    )\n}\n\nexport default connect(mapStateToProps)(Card)","import React from 'react';\nimport Card from './card';\nimport _ from 'lodash';\nimport { Grid } from '@material-ui/core';\n\n// Iterate through all cards in row and return card\nfunction CardRow(props) {\n    let cardsPerRow = 4;\n\n    // Get and show only cards per row\n    var cards = props.rowCards.slice(0, cardsPerRow).map(card => {\n        return <Card card={card} onClickFunction={props.onClickFunction}/>\n    })\n\n    return (\n        <Grid container>\n            {cards}\n        </Grid>\n    )\n}\n\nexport default CardRow;","import { Grid } from '@material-ui/core';\nimport React from 'react';\nimport GemImage from '../common/gemImage';\nimport _ from 'lodash';\n\n// Display noble card\nfunction Noble(props) {\n    return (\n    <Grid item xs>\n        {props.noble.victoryPoints}\n        {_.map(props.noble.cost, function(cost) {\n            return <div><GemImage gem={cost.gem}/>{cost.qty}</div>\n        })}\n    </Grid>\n    )\n}\n\nexport default Noble;","import { Grid } from '@material-ui/core';\nimport _ from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Noble from './noble';\n\nconst mapStateToProps = (state) => {\n    return { nobles: state.game.nobles }\n}\n\nfunction NobleRow(props) {\n    return (\n        <Grid container>{_.map(props.nobles, function (noble) {\n            return (<Noble noble={noble} />)\n        })}\n        </Grid>\n    )\n\n}\n\nexport default connect(mapStateToProps)(NobleRow);","/* Display Player Tokens */\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport { connect, useDispatch } from 'react-redux';\nimport CardRow from '../cards/cardRow';\nimport _ from 'lodash';\nimport NobleRow from '../../nobles/nobleRow';\n\nconst mapStateToProps = (state) => {\n    return { cards: state.game.cards }\n}\n\nfunction BoardCards(props) {\n    const dispatch = useDispatch();\n\n    const playerTakeCard = card => {\n        console.log(card)\n    };\n\n    return (\n        <Grid container direction=\"column\">\n            <NobleRow />\n            <CardRow rowCards={_.filter(props.cards, {\"level\" : 3})} onClickFunction={playerTakeCard} />\n            <CardRow rowCards={_.filter(props.cards, {\"level\" : 2})} onClickFunction={playerTakeCard} />\n            <CardRow rowCards={_.filter(props.cards, {\"level\" : 1})} onClickFunction={playerTakeCard} />\n        </Grid>\n    )\n}\n\nexport default connect(mapStateToProps)(BoardCards)\n","import React, { useEffect } from 'react';\n\nfunction GameDetails() {\n    \n    useEffect(() => {\n        fetch('https://api.boardgameatlas.com/api/search?ids=O0G8z5Wgz1&client_id=lSESTfkllX')\n        .then(response => console.log(response))\n        .then(error => console.log(error))\n    })\n    \n//const bggResponse = parseBggXmlApi2ThingResponse(response);\n//const thing = bggResponse.item;\n//console.log(thing)\n\n    return (<div>He</div>)\n}\n\nexport default GameDetails;","/* Pull all of the board game pieces together in a material ui (https://material-ui.com/) grid */\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport BoardTokens from './boardTokens';\nimport GamePlayers from './gamePlayers';\nimport BoardCards from './boardCards';\nimport GameDetails from './gameDetails';\n\n// Set up playing board with the game players, cards and tokens\nfunction Board() {\n    return (\n        <Grid container>\n            <GameDetails/>\n            <Grid item xs={1}>\n                <GamePlayers/>\n            </Grid>\n            <Grid item xs={9}>\n                <BoardCards/>\n            </Grid>\n            <Grid item xs={2}>\n                <BoardTokens />\n            </Grid>\n        </Grid>\n    );\n\n}\n\nexport default Board;","import React from 'react';\n\n/*props: \n  classStyle (string)\n*/\nfunction EmptyToken(props) {\n    \n  return (\n  <div>\n    EmptyToken\n  </div>);\n}\n\nexport default EmptyToken;","/* Display Player Tokens */\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport Token from '../token/token';\nimport EmptyToken from '../token/emptyToken';\nimport _ from 'lodash';\n\n// display player tokens\nfunction PlayerTokens(props) {\nconsole.log(props)\n    return (\n        <Grid container direction=\"row\">\n            { props.tokens.map((token, i) => {\n                if (token.qty === 0)\n                    return (<Grid item key={'empty_token_' + i}><EmptyToken token={token}/></Grid>);\n                else\n                    return (<Grid item key={'token_' + token.id} style={{ marginLeft: 30 }}><Token token={token} /></Grid>);\n            })}\n        </Grid>\n    )\n}\n\nexport default PlayerTokens;","/* Pull all of the player components together in a material ui (https://material-ui.com/) grid */\n/* Player has tokens, reserved cards and owned cards */\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport PlayerTokens from './playerTokens';\nimport { connect, useDispatch } from 'react-redux';\nimport _ from 'lodash';\n\n// find active player - because everyone is local right now, this is ok\n// TODO: when bots and remote players integrated - local will mean player on this session only\nconst mapStateToProps = (state) => {\n    return { activePlayer: _.find(state.game.players, {active : true}) }\n}\n\n// Render active player's space\nfunction PlayerSpace(props) {\n    const dispatch = useDispatch()\n    return (\n        <Grid container direction=\"row\">\n            <h2>{props.activePlayer.name}</h2>\n            <PlayerTokens tokens={props.activePlayer.tokens} />\n            <button className=\"end-turn\" onClick={() => dispatch({type: 'END_PLAYER_TURN'})}>End Turn</button>\n        </Grid>\n    )\n}\n\nexport default connect(mapStateToProps)(PlayerSpace)","import React from 'react';\nimport {connect, useDispatch} from 'react-redux'\nimport GameSetup from './components/setup/gameSetup';\nimport Board from './components/game/board';\nimport PlayerSpace from './components/player/playerSpace';\nimport './App.scss';\n\nconst mapStateToProps = (state) => {\n  return { gameState: state.game.gameState }\n}\n\nfunction App(props) {\n  const dispatch = useDispatch()\n  return (\n    <div className=\"App\">\n          {props.gameState !== 'started' ? \n          <GameSetup/>\n          : \n          <React.Fragment>\n            <Board/>\n            <PlayerSpace/>\n          </React.Fragment>}\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps)(App)\n","export const START_GAME  = 'START_GAME'\nexport const REMOVE_TOKEN_FROM_BOARD = 'REMOVE_TOKEN_FROM_BOARD'\nexport const ADD_TOKEN_TO_BOARD = 'ADD_TOKEN_TO_BOARD'\nexport const BEGIN_PLAYER_TURN = 'BEGIN_PLAYER_TURN'\nexport const PLAYER_TAKE_CARD = 'PLAYER_TAKE_CARD'\nexport const PLAYER_RESERVE_CARD = 'PLAYER_RESERVE_CARD'\nexport const END_PLAYER_TURN = 'END_PLAYER_TURN'\n\nexport const ADD_PLAYER = 'ADD_PLAYER'","const Gems = {\n    GREEN : \"EMERALD\",\n    BLUE: \"SAPPHIRE\",\n    RED: \"RUBY\",\n    WHITE: \"DIAMOND\",\n    BLACK: \"ONYX\",\n    YELLOW: \"GOLD\"\n}\n\nconst cardsPerRow = 4;\n\nexport default {Gems, cardsPerRow};","import Constants from './constants';\n\nconst tokens = (tokenQty, goldQty) => [\n    {\n        id:1,\n        gem: Constants.Gems.RED,\n        qty: tokenQty\n    },\n    {\n        id:2,\n        gem: Constants.Gems.BLACK,\n        qty: tokenQty\n    },\n    {\n        id:3,\n        gem: Constants.Gems.BLUE,\n        qty: tokenQty\n    },\n    {\n        id:4,\n        gem: Constants.Gems.GREEN,\n        qty: tokenQty\n    },\n    {\n        id:5,\n        gem: Constants.Gems.WHITE,\n        qty: tokenQty\n    },\n    {\n        id:6,\n        gem: Constants.Gems.YELLOW,\n        qty: goldQty\n    }\n]\n\nexport default tokens;","import Constants from './constants';\n\nconst cards = [\n    {\n        id: 1,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.BLUE, qty: 1 },\n        { gem: Constants.Gems.GREEN, qty: 1 },\n        { gem: Constants.Gems.RED, qty: 1 }\n        ]\n    },\n    {\n        id: 2,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.BLUE, qty: 2 },\n        { gem: Constants.Gems.GREEN, qty: 1 },\n        { gem: Constants.Gems.RED, qty: 1 }\n        ]\n    },\n    {\n        id: 3,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 2 },\n        { gem: Constants.Gems.BLUE, qty: 2 },\n        { gem: Constants.Gems.RED, qty: 1 }\n        ]\n    },\n    {\n        id: 4,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 1 },\n        { gem: Constants.Gems.RED, qty: 3 }\n        ]\n    },\n    {\n        id: 5,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 2 },\n        { gem: Constants.Gems.RED, qty: 1 }\n        ]\n    },\n    {\n        id: 6,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 2 },\n        { gem: Constants.Gems.GREEN, qty: 2 }\n        ]\n    },\n    {\n        id: 7,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 3 }]\n    },\n    {\n        id: 8,\n        level: 1,\n        victoryPoints: 1,\n        gem: Constants.Gems.BLACK,\n\n        cost: [{ gem: Constants.Gems.BLUE, qty: 4 }]\n    },\n    {\n        id: 9,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.GREEN, qty: 1 },\n        { gem: Constants.Gems.RED, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 1 }]\n    },\n    {\n        id: 10,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.GREEN, qty: 1 },\n        { gem: Constants.Gems.RED, qty: 2 },\n        { gem: Constants.Gems.BLACK, qty: 1 }]\n    },\n    {\n        id: 11,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.GREEN, qty: 2 },\n        { gem: Constants.Gems.RED, qty: 2 }]\n    },\n    {\n        id: 12,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 1 },\n        { gem: Constants.Gems.GREEN, qty: 3 },\n        { gem: Constants.Gems.RED, qty: 1 }]\n    },\n    {\n        id: 13,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 2 }]\n    },\n    {\n        id: 14,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 2 },\n        { gem: Constants.Gems.BLACK, qty: 2 }]\n    },\n    {\n        id: 15,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.BLACK, qty: 3 }]\n    },\n    {\n        id: 16,\n        level: 1,\n        victoryPoints: 1,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.RED, qty: 4 }]\n    },\n    {\n        id: 17,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 1 },\n        { gem: Constants.Gems.GREEN, qty: 1 },\n        { gem: Constants.Gems.RED, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 1 }]\n    },\n    {\n        id: 18,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 1 },\n        { gem: Constants.Gems.GREEN, qty: 2 },\n        { gem: Constants.Gems.RED, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 1 }]\n    },\n    {\n        id: 19,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 2 },\n        { gem: Constants.Gems.GREEN, qty: 2 },\n        { gem: Constants.Gems.BLACK, qty: 1 }]\n    },\n    {\n        id: 20,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 },\n        { gem: Constants.Gems.BLUE, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 1 }]\n    },\n    {\n        id: 21,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.RED, qty: 2 },\n        { gem: Constants.Gems.BLACK, qty: 1 }]\n    },\n    {\n        id: 22,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 2 },\n        { gem: Constants.Gems.BLACK, qty: 2 }]\n    },\n    {\n        id: 23,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 3 }]\n    },\n    {\n        id: 24,\n        level: 1,\n        victoryPoints: 1,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 4 }]\n    },\n    {\n        id: 25,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.BLUE, qty: 1 },\n        { gem: Constants.Gems.RED, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 1 }]\n    },\n    {\n        id: 26,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.BLUE, qty: 1 },\n        { gem: Constants.Gems.RED, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 2 }]\n    },\n    {\n        id: 27,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 1 },\n        { gem: Constants.Gems.RED, qty: 2 },\n        { gem: Constants.Gems.BLACK, qty: 2 }]\n    },\n    {\n        id: 28,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.BLUE, qty: 3 },\n        { gem: Constants.Gems.GREEN, qty: 1 }]\n    },\n    {\n        id: 29,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 2 },\n        { gem: Constants.Gems.BLUE, qty: 1 }]\n    },\n    {\n        id: 30,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.RED, qty: 2 },\n        { gem: Constants.Gems.BLUE, qty: 2 }]\n    },\n    {\n        id: 31,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.RED, qty: 3 }]\n    },\n    {\n        id: 32,\n        level: 1,\n        victoryPoints: 1,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.BLACK, qty: 4 }]\n    },\n    {\n        id: 33,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.BLUE, qty: 1 },\n        { gem: Constants.Gems.GREEN, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 1 }]\n    },\n    {\n        id: 34,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 2 },\n        { gem: Constants.Gems.BLUE, qty: 1 },\n        { gem: Constants.Gems.GREEN, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 1 }]\n    },\n    {\n        id: 35,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 2 },\n        { gem: Constants.Gems.GREEN, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 2 }]\n    },\n    {\n        id: 36,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.RED, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 3 }]\n    },\n    {\n        id: 37,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 2 },\n        { gem: Constants.Gems.GREEN, qty: 1 }]\n    },\n    {\n        id: 38,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 2 },\n        { gem: Constants.Gems.RED, qty: 2 }]\n    },\n    {\n        id: 39,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 }]\n    },\n    {\n        id: 40,\n        level: 1,\n        victoryPoints: 1,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 4 }]\n    },\n    {\n        id: 41,\n        level: 2,\n        victoryPoints: 1,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 },\n        { gem: Constants.Gems.BLUE, qty: 2 },\n        { gem: Constants.Gems.GREEN, qty: 2 }]\n    },\n    {\n        id: 42,\n        level: 2,\n        victoryPoints: 1,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 },\n        { gem: Constants.Gems.GREEN, qty: 3 },\n        { gem: Constants.Gems.BLACK, qty: 2 }]\n    },\n    {\n        id: 43,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 1 },\n        { gem: Constants.Gems.GREEN, qty: 4 },\n        { gem: Constants.Gems.RED, qty: 2 }]\n    },\n    {\n        id: 44,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 5 },\n        { gem: Constants.Gems.RED, qty: 3 }]\n    },\n    {\n        id: 45,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 5 }]\n    },\n    {\n        id: 46,\n        level: 2,\n        victoryPoints: 3,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.BLACK, qty: 6 }]\n    },\n    {\n        id: 47,\n        level: 2,\n        victoryPoints: 1,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 2 },\n        { gem: Constants.Gems.GREEN, qty: 2 },\n        { gem: Constants.Gems.RED, qty: 3 }]\n    },\n    {\n        id: 48,\n        level: 2,\n        victoryPoints: 1,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 2 },\n        { gem: Constants.Gems.GREEN, qty: 3 },\n        { gem: Constants.Gems.BLACK, qty: 3 }]\n    },\n    {\n        id: 49,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 3 },\n        { gem: Constants.Gems.WHITE, qty: 5 }]\n    },\n    {\n        id: 50,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 2 },\n        { gem: Constants.Gems.BLACK, qty: 4 },\n        { gem: Constants.Gems.RED, qty: 1 }]\n    },\n    {\n        id: 51,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 5 }]\n    },\n    {\n        id: 52,\n        level: 2,\n        victoryPoints: 3,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 6 }]\n    },\n    {\n        id: 53,\n        level: 2,\n        victoryPoints: 1,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 3 },\n        { gem: Constants.Gems.RED, qty: 2 },\n        { gem: Constants.Gems.BLACK, qty: 2 }]\n    },\n    {\n        id: 54,\n        level: 2,\n        victoryPoints: 1,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 2 },\n        { gem: Constants.Gems.BLUE, qty: 3 },\n        { gem: Constants.Gems.RED, qty: 3 }]\n    },\n    {\n        id: 55,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 2 },\n        { gem: Constants.Gems.RED, qty: 4 }]\n    },\n    {\n        id: 56,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.BLACK, qty: 3 },\n        { gem: Constants.Gems.RED, qty: 5 }]\n    },\n    {\n        id: 57,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.RED, qty: 5 }]\n    },\n    {\n        id: 58,\n        level: 2,\n        victoryPoints: 3,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 6 }]\n    },\n    {\n        id: 59,\n        level: 2,\n        victoryPoints: 1,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 },\n        { gem: Constants.Gems.GREEN, qty: 2 },\n        { gem: Constants.Gems.RED, qty: 3 }]\n    },\n    {\n        id: 60,\n        level: 2,\n        victoryPoints: 1,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 2 },\n        { gem: Constants.Gems.BLUE, qty: 3 },\n        { gem: Constants.Gems.BLACK, qty: 2 }]\n    },\n    {\n        id: 61,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 4 },\n        { gem: Constants.Gems.BLUE, qty: 2 },\n        { gem: Constants.Gems.BLACK, qty: 1 }]\n    },\n    {\n        id: 62,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 3 },\n        { gem: Constants.Gems.BLUE, qty: 5 }]\n    },\n    {\n        id: 63,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 5 }]\n    },\n    {\n        id: 64,\n        level: 2,\n        victoryPoints: 3,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 6 }]\n    },\n    {\n        id: 65,\n        level: 2,\n        victoryPoints: 1,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 2 },\n        { gem: Constants.Gems.RED, qty: 2 },\n        { gem: Constants.Gems.BLACK, qty: 3 }]\n    },\n    {\n        id: 66,\n        level: 2,\n        victoryPoints: 1,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 3 },\n        { gem: Constants.Gems.RED, qty: 2 },\n        { gem: Constants.Gems.BLACK, qty: 3 }]\n    },\n    {\n        id: 67,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.BLUE, qty: 4 },\n        { gem: Constants.Gems.GREEN, qty: 2 }]\n    },\n    {\n        id: 68,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 },\n        { gem: Constants.Gems.BLACK, qty: 5 }]\n    },\n    {\n        id: 69,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.BLACK, qty: 5 }]\n    },\n    {\n        id: 70,\n        level: 2,\n        victoryPoints: 3,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.RED, qty: 6 }]\n    },\n    {\n        id: 71,\n        level: 3,\n        victoryPoints: 3,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 },\n        { gem: Constants.Gems.BLUE, qty: 3 },\n        { gem: Constants.Gems.GREEN, qty: 5 },\n        { gem: Constants.Gems.RED, qty: 3 }]\n    },\n    {\n        id: 72,\n        level: 3,\n        victoryPoints: 4,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.RED, qty: 7 }]\n    },\n    {\n        id: 73,\n        level: 3,\n        victoryPoints: 4,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 3 },\n        { gem: Constants.Gems.RED, qty: 6 },\n        { gem: Constants.Gems.BLACK, qty: 3 }]\n    },\n    {\n        id: 74,\n        level: 3,\n        victoryPoints: 5,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.RED, qty: 7 },\n        { gem: Constants.Gems.BLACK, qty: 3 }]\n    },\n    {\n        id: 75,\n        level: 3,\n        victoryPoints: 3,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 },\n        { gem: Constants.Gems.GREEN, qty: 3 },\n        { gem: Constants.Gems.RED, qty: 3 },\n        { gem: Constants.Gems.BLACK, qty: 5 }]\n    },\n    {\n        id: 76,\n        level: 3,\n        victoryPoints: 4,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 7 }]\n    },\n    {\n        id: 77,\n        level: 3,\n        victoryPoints: 4,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 6 },\n        { gem: Constants.Gems.BLUE, qty: 3 },\n        { gem: Constants.Gems.BLACK, qty: 3 }]\n    },\n    {\n        id: 78,\n        level: 3,\n        victoryPoints: 5,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 7 },\n        { gem: Constants.Gems.BLUE, qty: 3 }]\n    },\n    {\n        id: 79,\n        level: 3,\n        victoryPoints: 3,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 3 },\n        { gem: Constants.Gems.BLUE, qty: 3 },\n        { gem: Constants.Gems.RED, qty: 5 },\n        { gem: Constants.Gems.BLACK, qty: 3 }]\n    },\n    {\n        id: 80,\n        level: 3,\n        victoryPoints: 4,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.BLACK, qty: 7 }]\n    },\n    {\n        id: 81,\n        level: 3,\n        victoryPoints: 4,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 },\n        { gem: Constants.Gems.RED, qty: 3 },\n        { gem: Constants.Gems.BLACK, qty: 6 }]\n    },\n    {\n        id: 82,\n        level: 3,\n        victoryPoints: 5,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 },\n        { gem: Constants.Gems.BLACK, qty: 7 }]\n    },\n    {\n        id: 83,\n        level: 3,\n        victoryPoints: 3,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 5 },\n        { gem: Constants.Gems.BLACK, qty: 3 },\n        { gem: Constants.Gems.BLUE, qty: 3 },\n        { gem: Constants.Gems.RED, qty: 3 }]\n    },\n    {\n        id: 84,\n        level: 3,\n        victoryPoints: 4,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 7 }]\n    },\n    {\n        id: 85,\n        level: 3,\n        victoryPoints: 4,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 },\n        { gem: Constants.Gems.BLUE, qty: 6 },\n        { gem: Constants.Gems.GREEN, qty: 3 }]\n    },\n    {\n        id: 86,\n        level: 3,\n        victoryPoints: 5,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 7 },\n        { gem: Constants.Gems.GREEN, qty: 3 }]\n    },\n    {\n        id: 87,\n        level: 3,\n        victoryPoints: 3,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 },\n        { gem: Constants.Gems.BLUE, qty: 5 },\n        { gem: Constants.Gems.GREEN, qty: 3 },\n        { gem: Constants.Gems.BLACK, qty: 3 }]\n    },\n    {\n        id: 88,\n        level: 3,\n        victoryPoints: 4,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 7 }]\n    },\n    {\n        id: 89,\n        level: 3,\n        victoryPoints: 4,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 3 },\n        { gem: Constants.Gems.GREEN, qty: 6 },\n        { gem: Constants.Gems.RED, qty: 3 }]\n    },\n    {\n        id: 90,\n        level: 3,\n        victoryPoints: 5,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 7 },\n        { gem: Constants.Gems.RED, qty: 3 }]\n    }\n];\n\nexport default cards;","import Constants from './constants';\n\nconst nobles = [\n    {\n        id: 1,\n        victoryPoints: 3,\n        imageCode: \"CAT_MEDICI\",\n        cost: [{ gem: Constants.Gems.GREEN, qty: 3 },\n            { gem: Constants.Gems.BLUE, qty: 3 },\n            { gem: Constants.Gems.RED, qty: 3 }]\n    },\n    {\n        id: 2,\n        victoryPoints: 3,\n        imageCode: \"ELI_AUSTRIA\",\n        cost: [{ gem: Constants.Gems.BLUE, qty: 3 },\n            { gem: Constants.Gems.BLACK, qty: 3 },\n            { gem: Constants.Gems.WHITE, qty: 3 }]\n    },\n    {\n        id: 3,\n        victoryPoints: 3,\n        imageCode: \"ISA_CASTILE\",\n        cost: [{ gem: Constants.Gems.BLACK, qty: 4 },\n            { gem: Constants.Gems.WHITE, qty: 4 }]\n    },\n    {\n        id: 4,\n        victoryPoints: 3,\n        imageCode: \"NIC_MACHIA\",\n        cost: [{ gem: Constants.Gems.BLUE, qty: 4 },\n            { gem: Constants.Gems.WHITE, qty: 4 }]\n    },\n    {\n        id: 5,\n        victoryPoints: 3,\n        imageCode: \"SUL_MAGNI\",\n        cost: [{ gem: Constants.Gems.BLUE, qty: 4 },\n            { gem: Constants.Gems.GREEN, qty: 4 }]\n    },\n    {\n        id: 6,\n        victoryPoints: 3,\n        imageCode: \"ANN_BRITAN\",\n        cost: [{ gem: Constants.Gems.GREEN, qty: 3 },\n            { gem: Constants.Gems.BLUE, qty: 3 },\n            { gem: Constants.Gems.WHITE, qty: 3 }]\n    },\n    {\n        id: 7,\n        victoryPoints: 3,\n        imageCode: \"CHARLES_V\",\n        cost: [{ gem: Constants.Gems.BLACK, qty: 3 },\n            { gem: Constants.Gems.RED, qty: 3 },\n            { gem: Constants.Gems.WHITE, qty: 3 }]\n    },\n    {\n        id: 8,\n        victoryPoints: 3,\n        imageCode: \"FRAN_FRANCE\",\n        cost: [{ gem: Constants.Gems.BLACK, qty: 3 },\n            { gem: Constants.Gems.RED, qty: 3 },\n            { gem: Constants.Gems.GREEN, qty: 3 }]\n    },\n    {\n        id: 9,\n        victoryPoints: 3,\n        imageCode: \"HENRY_VIII\",\n        cost: [{ gem: Constants.Gems.BLACK, qty: 4 },\n            { gem: Constants.Gems.RED, qty: 4 }]\n    },\n    {\n        id: 10,\n        victoryPoints: 3,\n        imageCode: \"MARY_STUART\",\n        cost: [{ gem: Constants.Gems.GREEN, qty: 4 },\n            { gem: Constants.Gems.RED, qty: 4 }]\n    }\n];\n\nexport default nobles;","import _ from 'lodash';\n\nexport function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n  export function shuffleCards(list) {\n      return _.shuffle(list)\n  }","// import actions from actions file\nimport { START_GAME, REMOVE_TOKEN_FROM_BOARD, ADD_TOKEN_TO_BOARD, PLAYER_TAKE_CARD, PLAYER_RESERVE_CARD, END_PLAYER_TURN } from '../actions';\nimport tokens from '../../common/tokens';\nimport cards from '../../common/cards';\nimport nobles from '../../common/nobles';\nimport constants from '../../common/constants';\nimport { getRandomInt, shuffleCards } from '../../helpers';\nimport _ from 'lodash';\n\n// set initial game state with game tokens, setting quantity tokens(tokenQty, goldQty)\n// game token quantity is based on number of players, players always start with 0\nconst initialState = {\n  tokens: tokens(7, 5),\n  gameState: 'initializing'\n}\n\n// Use the initialState as a default value\nexport default function game(state = initialState, action) {\n  switch (action.type) {\n    // To start game: add players to state and set default values, set player first turn, shuffle cards and nobles\n    case (START_GAME): {\n      let firstTurn = getRandomInt(action.players.length);\n      let players = _.map(action.players, function (player, i) {\n        return _.assign(player, {\n          id: i,\n          name: player.name,\n          type: player.type,\n          active: firstTurn === i,\n          tokens: tokens(0, 0),\n          gems: tokens(0, 0),\n          reserved: [],\n          points: 0\n        });\n      })\n\n      return {\n        ...state, gameState: 'started', players, cards: shuffleCards(cards), nobles: shuffleCards(nobles).slice(0, 4)\n      }\n    }\n\n    // Find index of removed token from state; Remove token to board tokens and add to player tokens\n    case (REMOVE_TOKEN_FROM_BOARD): {\n      return {\n        ...state,\n        tokens: state.tokens.map((token, i) => action.chips.includes(token.id) ? { ...token, qty: token.qty - 1 } : token),\n        players: state.players.map((player, i) => player.active ?\n          {\n            ...player,\n            tokens: player.tokens.map((token, x) => action.chips.includes(token.id) ? { ...token, qty: token.qty + 1 } : token),\n          }\n          : player)\n      }\n    }\n    // Find index of removed token from state; Remove token from player tokens and add to board tokens\n    case (ADD_TOKEN_TO_BOARD): {\n      let tokenIndex = _.findIndex(state.tokens, function (token) { return token.id === action.id })\n      return {\n        ...state,\n        tokens: state.tokens.map((token, i) => i === tokenIndex ? { ...token, qty: token.qty + 1 } : token),\n        players: state.players.map((player, i) => player.active ?\n          {\n            ...player,\n            tokens: player.tokens.map((token, x) => x === tokenIndex ? { ...token, qty: token.qty - 1 } : token),\n          }\n          : player)\n      }\n    }\n    // Purchase card for player, remove card from board, give card to player\n    case (PLAYER_TAKE_CARD): {\n      console.log('player can afford the card')\n      // take card from board by removing from card array\n      console.log(action)\n      // this should put a new card on the board - how do we preserve the location? \n      // add to players cards\n      // \n      return state\n    }\n    // Player reserve card: remove gold token from board, add gold token to player\n    // Add card to players reserved card and remove from deck\n    case (PLAYER_RESERVE_CARD): {\n      // gold token index\n      let tokenIndex = _.findIndex(state.tokens, function (token) { return token.gem === \"GOLD\" })\n      // set card level to get from state array, remove reserved card, find next card\n      // TO DO: replace card with next card to avoid rearrangement\n      let cardIndex = _.findIndex(state.cards, function (card) { return card.id === action.card.id })\n      const cloneCards = [...state.cards]\n      cloneCards.splice(cardIndex, 1)\n\n      return {\n        ...state,\n        cards: cloneCards,\n        tokens: state.tokens.map((token, i) => i === tokenIndex ? { ...token, qty: token.qty - 1 } : token),\n        players: state.players.map((player, i) => player.active ?\n          {\n            ...player,\n            reserved: [...player.reserved, action.card],\n            tokens: player.tokens.map((token, x) => x === tokenIndex ? { ...token, qty: token.qty + 1 } : token),\n          }\n          : player)\n      }\n    }\n    // Find current player and choose the next player based on the number of players\n    case (END_PLAYER_TURN): {\n      console.log('ending player turn')\n      let currentPlayer = _.findIndex(state.players, function (player) { return player.active })\n      let nextPlayerIndex = currentPlayer + 1;\n      if (!state.players[nextPlayerIndex]) {\n        nextPlayerIndex = 0;\n      }\n      console.log(nextPlayerIndex)\n      return {\n        ...state,\n        players: state.players.map((player, i) => ({\n          ...player,\n          active: i === nextPlayerIndex\n        }))\n      };\n    }\n    default:\n      // If this reducer doesn't recognize the action type, or doesn't\n      // care about this specific action, return the existing state unchanged\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport game from './gameReducer';\n\n//  combine reducers\nexport default combineReducers({\n    game\n})","import { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './reducers';\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV !== 'production'\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}