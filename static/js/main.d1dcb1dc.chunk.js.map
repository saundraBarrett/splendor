{"version":3,"sources":["common/playerTypes.js","components/setup/playerSetup.js","components/setup/gameSetup.js","components/token/token.js","components/token/tokenStack.js","components/game/boardTokens.js","components/common/cardBadge.js","components/player/playerTokens.js","components/game/gamePlayers.js","assets/gems/sapphire.png","assets/gems/emerald.png","assets/gems/ruby.png","assets/gems/diamond.png","assets/gems/onyx.png","assets/gems/gold.png","common/gemImage.js","components/cards/cardHeader.js","components/cards/cardBody.js","helpers/index.js","components/cards/cardDialog.js","components/cards/card.js","components/cards/cardRow.js","components/game/boardCards.js","components/game/gameDetails.js","assets/nobles/catherine_de_medici.jpeg","components/nobles/noble.js","components/nobles/nobleRow.js","components/player/playerSpace.js","components/game/board.js","App.js","redux/actions/index.js","common/constants.js","common/tokens.js","common/cards.js","common/nobles.js","redux/reducers/gameReducer.js","redux/reducers/index.js","redux/store.js","serviceWorker.js","index.js"],"names":["playerTypes","id","type","PlayerSetup","props","useState","i","name","player","updatePlayer","Grid","container","direction","spacing","item","xs","FormControl","style","minWidth","variant","InputLabel","Select","native","labelId","value","onChange","e","onChangePlayerType","_","map","playerType","TextField","required","label","defaultValue","newPlayer","target","doneUpdatingPlayer","updatePlayerName","GameSetup","localPlayer","find","defaultPlayers","dispatch","useDispatch","players","updatePlayers","alert","playerindex","findIndex","p","playersCopy","playerInputs","length","push","alignItems","justify","minHeight","backgroundColor","width","padding","fullWidth","marginBottom","inputProps","min","max","InputLabelProps","shrink","playerCount","tempPlayers","initial","updatePlayerCount","Button","color","onClick","Token","className","onClickFunction","token","gem","qty","TokenStack","tokens","connect","state","gameTokens","game","chips","setChips","updateChipCount","useEffect","selectedChips","CardBadge","PlayerTokens","gems","g","marginTop","Badge","badgeContent","victoryPoints","Accordion","disabled","active","AccordionSummary","AccordionDetails","GemImage","src","sapphire","emerald","ruby","diamond","onyx","gold","CardHeader","card","display","m","bgcolor","Box","flexGrow","textAlign","justifyContent","CardBody","alignSelf","cost","getRandomInt","Number","Math","floor","random","shuffleCards","list","shuffle","CardDialog","React","open","setOpen","canAfford","setCanAfford","canReserve","setCanReserve","handleClose","checkCanAfford","activePlayer","reserved","Dialog","onClose","aria-labelledby","dividers","autoFocus","margin","level","CardRow","cards","rowCards","slice","filter","GameDetails","fetch","then","response","console","log","error","fetchData","a","noble_cath","Noble","image","setNobleImage","nobleImage","backgroundImage","sm","noble","alignContent","fontSize","nobles","nobleImages","setNobleImages","res","json","result","Board","gameState","Fragment","START_GAME","REMOVE_TOKEN_FROM_BOARD","ADD_TOKEN_TO_BOARD","PLAYER_TAKE_CARD","PLAYER_RESERVE_CARD","END_PLAYER_TURN","GREEN","BLUE","RED","WHITE","BLACK","YELLOW","tokenQty","goldQty","Constants","imageCode","initialState","combineReducers","action","firstTurn","assign","includes","x","tokenIndex","cardIndex","gemIndex","cloneCards","splice","currentPlayer","nextPlayerIndex","store","configureStore","reducer","rootReducer","devTools","process","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d1dcb1dc.chunk.js","sourcesContent":["// Keeps track of player types\nconst playerTypes = [\n    {\n        id:1,\n        type: 'Local'\n    },\n    {\n        id:2,\n        type: 'Robot'\n    },\n    {\n        id: 3,\n        type: 'Remote'\n    }\n]\n\nexport default playerTypes;","import React, { useEffect, useState } from 'react';\nimport { FormControl, Input, InputLabel, Grid, FormGroup, Select, TextField } from '@material-ui/core';\nimport _ from 'lodash';\nimport playerTypes from '../../common/playerTypes';\n\n// player dropdown seletion for type imported from common goodies\nconst PlayerSetup = (props) => {\n    const [player, updatePlayer] = useState({\n        id: props.i,\n        type: props.type,\n        name: props.name\n    })\n\n    const updatePlayerName = e => {\n        let newPlayer = player;\n        newPlayer.name = e.target.value\n        updatePlayer(newPlayer)\n        props.doneUpdatingPlayer(player)\n    }\n\n    return (\n        <Grid container direction=\"row\" spacing={3}>\n            <Grid item xs={6} >\n                <FormControl style={{ minWidth: '240px' }} variant=\"outlined\" key={`player-type-${props.i}`} name={`player-type-${props.i}`} >\n                    <InputLabel id=\"player-type\">Player Type</InputLabel>\n                    <Select native labelId=\"player-type\" id={props.i} value={0} onChange={(e) => props.onChangePlayerType(e)}>\n                        {_.map(playerTypes, function (playerType) {\n                            return <option key={props.i + playerType.id} value={playerType.id}>{playerType.type}</option>\n                        })}\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n                <FormControl key={`fc-player-name-${props.i}`}>\n                    <TextField\n                        required\n                        id={`player-name-${props.i}`} \n                        label=\"Player Name\"\n                        defaultValue={props.name}\n                        variant=\"filled\"\n                        onChange={(e) => updatePlayerName(e)}\n                    />\n                </FormControl>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default PlayerSetup;","import React, { useState } from 'react';\nimport { FormControl, Input, InputLabel, Grid, Button, TextField } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport _ from 'lodash';\nimport PlayerSetup from './playerSetup';\nimport playerTypes from '../../common/playerTypes';\n\n// Set up game by getting number of players, 4 max\nfunction GameSetup(props) {\n    // find local player type from player types\n    const localPlayer = _.find(playerTypes, { 'type': 'Local' });\n\n    // setting default players (2) to local type\n    const defaultPlayers = [\n        { id: 0, type: localPlayer.id, name: \"Player 0\" },\n        { id: 1, type: localPlayer.id, name: \"Player 1\" }\n    ]\n\n    const dispatch = useDispatch()\n    const [players, updatePlayers] = useState(defaultPlayers);\n\n    const onChangePlayerType = e => {\n        // Change player type to local\n        if (e.target.value !== localPlayer.id) {\n            alert('Only local players allowed now!')\n        }\n    };\n\n    // when updating player data, save state variable\n    const doneUpdatingPlayer = player => {\n        let playerindex = _.findIndex(players, function (p) {\n            return p.id == player.id\n        })\n        let playersCopy = [...players];\n        playersCopy[playerindex] = player;\n        updatePlayers(playersCopy)\n    }\n\n    const updatePlayerCount = playerCount => {\n        // Add player and set as local player\n        if (playerCount > players.length) {\n            updatePlayers([\n                ...players, { type: localPlayer.id, name: `Player ${playerCount}` }\n            ])\n        }\n        // Remove player\n        else if (playerCount < players.length) {\n            // intiial function from lodash removes last item from array\n            let tempPlayers = _.initial(players)\n            updatePlayers(tempPlayers)\n        }\n    }\n\n    // set up player select list, rendered as playerInputs\n    const playerInputs = [];\n    for (let i = 0; i < players.length; i++) {\n        playerInputs.push(\n            <PlayerSetup key={\"player-setup_\" + i} i={i} type={localPlayer.id} name={players[i].name} onChangePlayerType={onChangePlayerType} doneUpdatingPlayer={doneUpdatingPlayer} />\n        )\n    }\n\n    return (\n        <Grid\n            container\n            spacing={2}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: '100vh' }}>\n            <div style={{ backgroundColor: 'white', width: '50%', padding: '1em' }} >\n                <Grid item>\n                    <FormControl fullWidth={true} style={{marginBottom: '1em'}}>\n                        <TextField\n                            id=\"number-of-players\"\n                            label=\"Number of Players\"\n                            type=\"number\"\n                            defaultValue={2}\n                            inputProps={{\n                                min: \"2\", max: \"4\"\n                            }}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange={(e) => updatePlayerCount(e.target.value)} \n                        />\n                        \n                    </FormControl>\n                </Grid>\n                <Grid item>\n                    {playerInputs}\n                </Grid>\n                <Grid item>\n                    <Button fullWidth variant=\"contained\" color=\"secondary\" onClick={() => dispatch({ type: 'START_GAME', players: players })} >Start Game</Button>\n                </Grid>\n            </div>\n        </Grid >\n\n    )\n}\n\nexport default GameSetup;","import React from 'react';\n\n// Display token\nconst Token = (props) => {\n    return (\n        <div className=\"token-container\" onClick={props.onClickFunction ? () => props.onClickFunction(props.token.id) : null }>\n            <div className={\"token token-\"+props.token.gem}>\n            <div className={\"count-\"+props.token.qty}>{props.token.qty}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Token;","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport Token from './token';\n\nfunction TokenStack(props) {\n\n    let tokens = []\n    // update to prop.token.qty when you want a stack of chips\n    for (let i = 0; i < 1; i++) {\n        tokens.push(<Token key={\"token_\"+i} token={props.token} onClickFunction={props.onClickFunction} />)\n    }\n\n    return (\n        <Grid item className=\"token-stack\">\n            {tokens}\n        </Grid>\n\n    )\n}\n\nexport default TokenStack;","import React, {useState, useEffect} from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport TokenStack from '../token/tokenStack';\n\n// get game variables from redux store\nconst mapStateToProps = (state) => {\n    return { gameTokens: state.game.tokens }\n}  \n\nfunction BoardTokens(props) {\n    // dispatch functionality from redux store\n    const dispatch = useDispatch()\n    const [chips, setChips] = useState([]);\n\n    const updateChipCount = e => {\n        setChips(\n            chips => [...chips, e]\n        )\n    };\n    // add tokens to players hand\n    useEffect(() => {\n        if (chips.length === 3 ) {\n            dispatch({type:'REMOVE_TOKEN_FROM_BOARD', chips})\n            dispatch({type: 'END_PLAYER_TURN' })\n            setChips([])\n        }\n      });\n\n    return (\n        <Grid container direction=\"column\">\n            { props.gameTokens.map((token, i) => {\n                return (<TokenStack key={\"token-stack_\"+i} token={token} i={i} onClickFunction={updateChipCount} selectedChips={chips}/>)\n            })}\n        </Grid>\n    )\n}\n\nexport default connect(mapStateToProps)(BoardTokens);","import React from 'react';\n\n// card badge to show card color with points overlay\n// expecting 2 properties {gem, qty}\nconst CardBadge = (props) => {\n    return <div className={\"card-badge \"+props.gem}>{props.qty}</div>\n}\n\nexport default CardBadge;","/* Display Player Tokens */\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport _ from 'lodash';\nimport CardBadge from '../common/cardBadge';\nimport Token from '../token/token';\n\n// display player tokens and gems\nfunction PlayerTokens(props) {\n    return (\n        <Grid container direction=\"row\">\n            { props.tokens.map((token, i) => {\n                let gem = _.find(props.gems, function(g) { return g.id === token.id})\n                return (\n                <Grid item xs={2} container direction=\"row\" className={'player-count ' + token.gem} key={'token_' + token.id} >\n                    <Grid item xs={6}><CardBadge gem={gem.gem} qty={gem.qty}/></Grid>\n                    <Grid item xs={6}><Token token={token}/></Grid>\n                </Grid>);\n            })}\n        </Grid>\n    )\n}\n\nexport default PlayerTokens;","/* Display Player Tokens */\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport { connect } from 'react-redux';\nimport { Badge, Tab, Tabs } from '@material-ui/core';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport PlayerTokens from '../player/playerTokens';\n\nconst mapStateToProps = (state) => {\n    return { players: state.game.players }\n}\n\n// Display a list of accordions and show player details\n// TODO: break accordion into sub component\nfunction GamePlayers(props) {\n    return (\n        <Grid container direction=\"column\">\n            {props.players.map((player, i) => {\n                return (\n                    <div style={{ marginTop: '1em' }}>\n                        <Badge badgeContent={player.victoryPoints} color=\"secondary\">\n                            <Accordion disabled={player.active ? true : false}>\n                                <AccordionSummary>{player.name}</AccordionSummary>\n                                <AccordionDetails>\n                                    <Grid container direction=\"row\">\n                                        <h3>Points: {player.victoryPoints}</h3>\n                                        <PlayerTokens tokens={player.tokens} gems={player.gems} />\n                                    </Grid>\n                                </AccordionDetails>\n                            </Accordion>\n                        </Badge>\n                    </div>\n                )\n            })}\n\n        </Grid>\n    )\n}\n\nexport default connect(mapStateToProps)(GamePlayers)\n","export default __webpack_public_path__ + \"static/media/sapphire.5361b8d5.png\";","export default __webpack_public_path__ + \"static/media/emerald.84aea5eb.png\";","export default __webpack_public_path__ + \"static/media/ruby.1ccb5125.png\";","export default __webpack_public_path__ + \"static/media/diamond.f68b3adf.png\";","export default __webpack_public_path__ + \"static/media/onyx.1a6421b0.png\";","export default __webpack_public_path__ + \"static/media/gold.6237158e.png\";","import sapphire from '../assets/gems/sapphire.png';\nimport emerald from '../assets/gems/emerald.png';\nimport ruby from '../assets/gems/ruby.png';\nimport diamond from '../assets/gems/diamond.png';\nimport onyx from '../assets/gems/onyx.png';\nimport gold from '../assets/gems/gold.png';\n\n// return image to be used in different places\nconst GemImage = (props) => {\n    switch (props.gem) {\n        case \"SAPPHIRE\":\n            return <img src={sapphire} />\n            break;\n        case \"EMERALD\":\n            return <img src={emerald} />\n            break;\n        case \"RUBY\":\n            return <img src={ruby} />\n            break;\n        case \"DIAMOND\":\n            return <img src={diamond} />\n            break;\n        case \"ONYX\":\n            return <img src={onyx} />\n            break;\n        case \"GOLD\":\n            return <img src={gold} />\n            break;\n        default:\n            return null\n            break;\n    }\n}\n\nexport default GemImage;","import React from 'react';\nimport { Box, Grid, Paper, Typography, Button } from '@material-ui/core';\nimport { connect, useDispatch } from 'react-redux';\nimport GemImage from '../../common/gemImage';\n\n// Design Card Header\nconst CardHeader = (props) => {\n    return (\n        < Grid item container\n            className={'card overlay card-' + props.card.gem}\n            display=\"flex\"\n            p={1}\n            m={2}\n            bgcolor=\"background.paper\" >\n            { props.card.victoryPoints !== 0 ? <Box className=\"victory-points\"> {props.card.victoryPoints} </Box> : null}\n            < Box flexGrow={1} textAlign=\"right\" className=\"gem-container\" justifyContent=\"flex-end\" >\n                <GemImage gem={props.card.gem} />\n            </Box >\n        </Grid >\n    )\n\n}\n\nexport default CardHeader;","import React from 'react';\nimport { Box, Grid, Paper, Typography, Button } from '@material-ui/core';\nimport { connect, useDispatch } from 'react-redux';\nimport GemImage from '../../common/gemImage';\nimport _ from 'lodash';\n\nconst CardBody = (props) => {\n    return (\n        <Grid item alignSelf=\"flex-end\" className=\"cost-container\">\n                    {_.map(props.card.cost, function (g) {\n                        return <div key={\"cost_\"+g.gem} className={\"cost cost_\" + g.gem}>\n                            <span className=\"quantity\">{g.qty}</span>\n                        </div>\n                    })}\n            </Grid>\n    )\n\n}\n\nexport default CardBody;","import _ from 'lodash';\n\nexport function getRandomInt(max) {\n    if (max instanceof Number) {\n        return Math.floor(Math.random() * max);\n    }\n    else {\n        return 0;\n    }\n    \n  }\n\n  export function shuffleCards(list) {\n      return _.shuffle(list)\n  }\n\n// global function to check if player can afford card\nexport function checkCanAfford(card, player) {\n    let cost = card.cost;\n    for (let i = 0; i < cost.length; i++) {\n        // if players tokens + cards with matching gem is less than the cost of the card, dont process\n        let activePlayerGemCount = _.find(player.tokens, { \"gem\": cost[i].gem }).qty + _.find(player.tokens, { \"gem\": cost[i].gem }).qty\n        if (activePlayerGemCount < cost[i].qty) {\n                return false;\n        }\n    }\n    return true;\n}\n\n// global function to check if player can reserve more cards\nexport function checkCanReserve(player) {\n    if (player.reserved.length !== 3) {\n        return true\n    }\n    else {\n        return false;\n    }\n}","import React, { useEffect } from 'react';\nimport { Dialog, Button, Grid } from '@material-ui/core';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport CardHeader from './cardHeader';\nimport CardBody from './cardBody';\nimport { useDispatch } from 'react-redux';\nimport { checkCanAfford, checkCanReserve } from '../../helpers';\n\n// Opens up card details in dialog to ask the user what they would like to do with the card\nexport default function CardDialog(props) {\n  const dispatch = useDispatch();\n\n  const [open, setOpen] = React.useState(false);\n  const [canAfford, setCanAfford] = React.useState(false);\n  const [canReserve, setCanReserve] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n    setCanAfford(checkCanAfford(props.card, props.activePlayer))\n    setCanReserve(checkCanReserve(props.activePlayer))\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const buyCard = () => {\n    let card = props.card\n    dispatch({ type: 'PLAYER_TAKE_CARD', card })\n    setOpen(false)\n    dispatch({ type: 'END_PLAYER_TURN' })\n  }\n\n  const reserveCard = () => {\n    let card = props.card\n    dispatch({ type: 'PLAYER_RESERVE_CARD', card })\n    setOpen(false)\n    dispatch({ type: 'END_PLAYER_TURN' })\n  }\n\n  return (\n    <div>\n      <Grid container xs variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        <Grid container direction=\"column\">\n          <CardHeader card={props.card} />\n          <CardBody card={props.card} />\n        </Grid>\n      </Grid>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <MuiDialogContent dividers>\n          <CardHeader card={props.card} />\n          <CardBody card={props.card} />\n        </MuiDialogContent>\n        <MuiDialogActions>\n          <Button autoFocus onClick={reserveCard} color=\"primary\" disabled={!canReserve}>\n            Reserve\n          </Button>\n          <Button autoFocus onClick={buyCard} color=\"primary\" disabled={!canAfford}>\n            Buy\n          </Button>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n        </MuiDialogActions>\n      </Dialog>\n    </div>\n  );\n}","import { Box, Grid } from '@material-ui/core';\nimport { connect, useDispatch } from 'react-redux';\nimport GemImage from '../../common/gemImage';\nimport _ from 'lodash';\nimport React from 'react';\nimport CardDialog from './cardDialog';\n\n// get active player\nconst mapStateToProps = (state) => {\n    return { activePlayer: _.find(state.game.players, { active: true }) }\n}\n// Display card\n// Setting up as a grid item from @material-ui\nfunction Card(props) {\n    return (\n        <Grid item xs={2} style={{margin: '1em'}} className={\"card-container \" + props.card.gem + props.card.level}>\n            <CardDialog card={props.card} activePlayer={props.activePlayer}/>\n        </Grid >\n    )\n}\n\nexport default connect(mapStateToProps)(Card)","import React from 'react';\nimport Card from './card';\nimport _ from 'lodash';\nimport { Grid } from '@material-ui/core';\n\n// Iterate through all cards in row and return card\nfunction CardRow(props) {\n    let cardsPerRow = 4;\n\n    // Get and show only cards per row\n    var cards = props.rowCards.slice(0, cardsPerRow).map(card => {\n        return <Card key={\"card_\"+card.id} card={card}/>\n    })\n\n    return (\n        <Grid container>\n            {cards}\n        </Grid>\n    )\n}\n\nexport default CardRow;","import React, {useEffect, useState} from 'react';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport { connect } from 'react-redux';\nimport CardRow from '../cards/cardRow';\nimport _ from 'lodash';\n\nconst mapStateToProps = (state) => {\n    return { cards: state.game.cards }\n}\n\n// Set up cards on the board\nfunction BoardCards(props) {\n    return (\n        <Grid container direction=\"column\">\n            <CardRow key={\"card-row_\"+3} rowCards={_.filter(props.cards, {\"level\" : 3})} />\n            <CardRow key={\"card-row_\"+2} rowCards={_.filter(props.cards, {\"level\" : 2})} />\n            <CardRow key={\"card-row_\"+1} rowCards={_.filter(props.cards, {\"level\" : 1})} />\n        </Grid>\n    )\n}\n\nexport default connect(mapStateToProps)(BoardCards)\n","import React, { useEffect } from 'react';\n\nfunction GameDetails() {\n    \n    useEffect(() => {\n        fetch('https://api.boardgameatlas.com/api/search?ids=O0G8z5Wgz1&client_id=lSESTfkllX')\n        .then(response => console.log(response))\n        .then(error => console.log(error))\n    })\n\n    return (<div></div>)\n}\n\nexport default GameDetails;","export default __webpack_public_path__ + \"static/media/catherine_de_medici.413e18c4.jpeg\";","import { Grid } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport CardBadge from '../common/cardBadge';\nimport _ from 'lodash';\nimport { getRandomInt } from '../../helpers';\nimport noble_cath from '../../assets/nobles/catherine_de_medici.jpeg'\n\n// Make api call to get random noble from met API\nconst fetchData = async (props) => {\n    /* if (props.nobleImages) {\n        let randomImage = getRandomInt(props.nobleImages.total)\n        let objectID = props.nobleImages.objectIDs[randomImage]\n        const res = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${objectID}`)\n        const json = await res.json()\n        return json.primaryImageSmall\n    }\n    else { */\n        return noble_cath\n    //}\n    \n}\n\n// Display noble card\nfunction Noble(props) {\n    useEffect(() => {\n        fetchData(props).then(image => {\n            setNobleImage(image)\n        })\n      }, [])\n\n    const [nobleImage, setNobleImage] = useState()\n    \n    return (\n        <Grid key={\"noble-container_\"+props.id} item xs={7} container className=\"noble-container\" style={{ margin: '1em', backgroundImage: `url(${nobleImage})` }}>\n            <Grid item container xs={4} sm={4} className=\"overlay\" direction=\"column\" justify=\"flex-end\">\n                {_.map(props.noble.cost, function (cost) {\n                    return <CardBadge key={'card-badge_'+cost.gem} gem={cost.gem} qty={cost.qty} />\n                })}\n            </Grid>\n            <Grid item xs={5} sm={5}></Grid>\n            <Grid item container className=\"overlay \" xs={3} sm={3} direction=\"column\" justify=\"flex-end\" alignContent=\"flex-end\">\n                <span style={{ fontSize: '2em', color: 'white' }}>{props.noble.victoryPoints}</span>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Noble;","import { Grid } from '@material-ui/core';\nimport _ from 'lodash';\nimport React, {useEffect, useState} from 'react';\nimport { connect } from 'react-redux';\nimport Noble from './noble';\n\nconst mapStateToProps = (state) => {\n    return { nobles: state.game.nobles }\n}\n\n// Show all nobles on board\nfunction NobleRow(props) {\n    const [nobleImages, setNobleImages] = useState()\n\n    useEffect(() => {\n        fetch(`https://collectionapi.metmuseum.org/public/collection/v1/search?q=portrait&hasImages=true`)\n          .then(res => res.json())\n          .then(\n            (result) => {\n                setNobleImages(result)\n            },\n            (error) => {\n              console.log(error)\n            }\n          )\n      }, [])\n\n    return (\n        <Grid container direction=\"column\">\n            {_.map(props.nobles, function (noble) {\n                return <Noble key={noble.id} noble={noble} nobleImages={nobleImages}/>\n            })}\n        </Grid>\n    )\n\n}\n\nexport default connect(mapStateToProps)(NobleRow);","/* Pull all of the player components together in a material ui (https://material-ui.com/) grid */\n/* Player has tokens, reserved cards and owned cards */\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport PlayerTokens from './playerTokens';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\n// find active player - because everyone is local right now, this is ok\n// TODO: when bots and remote players integrated - local will mean player on this session only\nconst mapStateToProps = (state) => {\n    return { activePlayer: _.find(state.game.players, {active : true}) }\n}\n\n// Render active player's space\nfunction PlayerSpace(props) {\n    return (\n        <Grid container direction=\"row\" alignItems={\"center\"}>\n            <h2 style={{width: '100%', textAlign: 'center'}}>{props.activePlayer.name}</h2>\n            <PlayerTokens tokens={props.activePlayer.tokens} gems={props.activePlayer.gems} />\n        </Grid>\n    )\n}\n\nexport default connect(mapStateToProps)(PlayerSpace)","/* Pull all of the board game pieces together in a material ui (https://material-ui.com/) grid */\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport BoardTokens from './boardTokens';\nimport GamePlayers from './gamePlayers';\nimport BoardCards from './boardCards';\nimport GameDetails from './gameDetails';\nimport NobleRow from '../nobles/nobleRow';\nimport PlayerSpace from '../player/playerSpace';\n\n// Set up playing board with the game players, cards and tokens\nfunction Board() {\n    return (\n        <Grid container>\n            <GameDetails/>\n            <Grid item xs={2}>\n                <GamePlayers/>\n            </Grid>\n            <Grid item xs={7}>\n                <BoardCards/>\n                <PlayerSpace />\n            </Grid>\n            <Grid item xs={2}>\n                <NobleRow/>\n            </Grid>\n            <Grid item xs={1}>\n                <BoardTokens />\n            </Grid>\n        </Grid>\n    );\n\n}\n\nexport default Board;","import React from 'react';\nimport {connect, useDispatch} from 'react-redux'\nimport GameSetup from './components/setup/gameSetup';\nimport Board from './components/game/board';\nimport './App.scss';\n\nconst mapStateToProps = (state) => {\n  return { gameState: state.game.gameState }\n}\n\nfunction App(props) {  \n  return (\n    <div className=\"App\">\n          {props.gameState !== 'started' ? \n          <GameSetup/>\n          : \n          <React.Fragment>\n            <Board/>\n          </React.Fragment>}\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps)(App)\n","export const START_GAME  = 'START_GAME'\nexport const GET_GAME_NOBLES_FROM_MET = 'GET_GAME_NOBLES_FROM_MET'\nexport const REMOVE_TOKEN_FROM_BOARD = 'REMOVE_TOKEN_FROM_BOARD'\nexport const ADD_TOKEN_TO_BOARD = 'ADD_TOKEN_TO_BOARD'\nexport const BEGIN_PLAYER_TURN = 'BEGIN_PLAYER_TURN'\nexport const PLAYER_TAKE_CARD = 'PLAYER_TAKE_CARD'\nexport const PLAYER_RESERVE_CARD = 'PLAYER_RESERVE_CARD'\nexport const END_PLAYER_TURN = 'END_PLAYER_TURN'\n\nexport const ADD_PLAYER = 'ADD_PLAYER'","const Gems = {\n    GREEN : \"EMERALD\",\n    BLUE: \"SAPPHIRE\",\n    RED: \"RUBY\",\n    WHITE: \"DIAMOND\",\n    BLACK: \"ONYX\",\n    YELLOW: \"GOLD\"\n}\n\nconst cardsPerRow = 4;\n\nexport default {Gems, cardsPerRow};","import Constants from './constants';\n\nconst tokens = (tokenQty, goldQty) => [\n    {\n        id:1,\n        gem: Constants.Gems.RED,\n        qty: tokenQty\n    },\n    {\n        id:2,\n        gem: Constants.Gems.BLACK,\n        qty: tokenQty\n    },\n    {\n        id:3,\n        gem: Constants.Gems.BLUE,\n        qty: tokenQty\n    },\n    {\n        id:4,\n        gem: Constants.Gems.GREEN,\n        qty: tokenQty\n    },\n    {\n        id:5,\n        gem: Constants.Gems.WHITE,\n        qty: tokenQty\n    },\n    {\n        id:6,\n        gem: Constants.Gems.YELLOW,\n        qty: goldQty\n    }\n]\n\nexport default tokens;","import Constants from './constants';\n\nconst cards = [\n    {\n        id: 1,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.BLUE, qty: 1 },\n        { gem: Constants.Gems.GREEN, qty: 1 },\n        { gem: Constants.Gems.RED, qty: 1 }\n        ]\n    },\n    {\n        id: 2,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.BLUE, qty: 2 },\n        { gem: Constants.Gems.GREEN, qty: 1 },\n        { gem: Constants.Gems.RED, qty: 1 }\n        ]\n    },\n    {\n        id: 3,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 2 },\n        { gem: Constants.Gems.BLUE, qty: 2 },\n        { gem: Constants.Gems.RED, qty: 1 }\n        ]\n    },\n    {\n        id: 4,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 1 },\n        { gem: Constants.Gems.RED, qty: 3 }\n        ]\n    },\n    {\n        id: 5,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 2 },\n        { gem: Constants.Gems.RED, qty: 1 }\n        ]\n    },\n    {\n        id: 6,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 2 },\n        { gem: Constants.Gems.GREEN, qty: 2 }\n        ]\n    },\n    {\n        id: 7,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 3 }]\n    },\n    {\n        id: 8,\n        level: 1,\n        victoryPoints: 1,\n        gem: Constants.Gems.BLACK,\n\n        cost: [{ gem: Constants.Gems.BLUE, qty: 4 }]\n    },\n    {\n        id: 9,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.GREEN, qty: 1 },\n        { gem: Constants.Gems.RED, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 1 }]\n    },\n    {\n        id: 10,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.GREEN, qty: 1 },\n        { gem: Constants.Gems.RED, qty: 2 },\n        { gem: Constants.Gems.BLACK, qty: 1 }]\n    },\n    {\n        id: 11,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.GREEN, qty: 2 },\n        { gem: Constants.Gems.RED, qty: 2 }]\n    },\n    {\n        id: 12,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 1 },\n        { gem: Constants.Gems.GREEN, qty: 3 },\n        { gem: Constants.Gems.RED, qty: 1 }]\n    },\n    {\n        id: 13,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 2 }]\n    },\n    {\n        id: 14,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 2 },\n        { gem: Constants.Gems.BLACK, qty: 2 }]\n    },\n    {\n        id: 15,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.BLACK, qty: 3 }]\n    },\n    {\n        id: 16,\n        level: 1,\n        victoryPoints: 1,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.RED, qty: 4 }]\n    },\n    {\n        id: 17,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 1 },\n        { gem: Constants.Gems.GREEN, qty: 1 },\n        { gem: Constants.Gems.RED, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 1 }]\n    },\n    {\n        id: 18,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 1 },\n        { gem: Constants.Gems.GREEN, qty: 2 },\n        { gem: Constants.Gems.RED, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 1 }]\n    },\n    {\n        id: 19,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 2 },\n        { gem: Constants.Gems.GREEN, qty: 2 },\n        { gem: Constants.Gems.BLACK, qty: 1 }]\n    },\n    {\n        id: 20,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 },\n        { gem: Constants.Gems.BLUE, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 1 }]\n    },\n    {\n        id: 21,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.RED, qty: 2 },\n        { gem: Constants.Gems.BLACK, qty: 1 }]\n    },\n    {\n        id: 22,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 2 },\n        { gem: Constants.Gems.BLACK, qty: 2 }]\n    },\n    {\n        id: 23,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 3 }]\n    },\n    {\n        id: 24,\n        level: 1,\n        victoryPoints: 1,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 4 }]\n    },\n    {\n        id: 25,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.BLUE, qty: 1 },\n        { gem: Constants.Gems.RED, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 1 }]\n    },\n    {\n        id: 26,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.BLUE, qty: 1 },\n        { gem: Constants.Gems.RED, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 2 }]\n    },\n    {\n        id: 27,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 1 },\n        { gem: Constants.Gems.RED, qty: 2 },\n        { gem: Constants.Gems.BLACK, qty: 2 }]\n    },\n    {\n        id: 28,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.BLUE, qty: 3 },\n        { gem: Constants.Gems.GREEN, qty: 1 }]\n    },\n    {\n        id: 29,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 2 },\n        { gem: Constants.Gems.BLUE, qty: 1 }]\n    },\n    {\n        id: 30,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.RED, qty: 2 },\n        { gem: Constants.Gems.BLUE, qty: 2 }]\n    },\n    {\n        id: 31,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.RED, qty: 3 }]\n    },\n    {\n        id: 32,\n        level: 1,\n        victoryPoints: 1,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.BLACK, qty: 4 }]\n    },\n    {\n        id: 33,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.BLUE, qty: 1 },\n        { gem: Constants.Gems.GREEN, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 1 }]\n    },\n    {\n        id: 34,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 2 },\n        { gem: Constants.Gems.BLUE, qty: 1 },\n        { gem: Constants.Gems.GREEN, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 1 }]\n    },\n    {\n        id: 35,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 2 },\n        { gem: Constants.Gems.GREEN, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 2 }]\n    },\n    {\n        id: 36,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.RED, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 3 }]\n    },\n    {\n        id: 37,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 2 },\n        { gem: Constants.Gems.GREEN, qty: 1 }]\n    },\n    {\n        id: 38,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 2 },\n        { gem: Constants.Gems.RED, qty: 2 }]\n    },\n    {\n        id: 39,\n        level: 1,\n        victoryPoints: 0,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 }]\n    },\n    {\n        id: 40,\n        level: 1,\n        victoryPoints: 1,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 4 }]\n    },\n    {\n        id: 41,\n        level: 2,\n        victoryPoints: 1,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 },\n        { gem: Constants.Gems.BLUE, qty: 2 },\n        { gem: Constants.Gems.GREEN, qty: 2 }]\n    },\n    {\n        id: 42,\n        level: 2,\n        victoryPoints: 1,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 },\n        { gem: Constants.Gems.GREEN, qty: 3 },\n        { gem: Constants.Gems.BLACK, qty: 2 }]\n    },\n    {\n        id: 43,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 1 },\n        { gem: Constants.Gems.GREEN, qty: 4 },\n        { gem: Constants.Gems.RED, qty: 2 }]\n    },\n    {\n        id: 44,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 5 },\n        { gem: Constants.Gems.RED, qty: 3 }]\n    },\n    {\n        id: 45,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 5 }]\n    },\n    {\n        id: 46,\n        level: 2,\n        victoryPoints: 3,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.BLACK, qty: 6 }]\n    },\n    {\n        id: 47,\n        level: 2,\n        victoryPoints: 1,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 2 },\n        { gem: Constants.Gems.GREEN, qty: 2 },\n        { gem: Constants.Gems.RED, qty: 3 }]\n    },\n    {\n        id: 48,\n        level: 2,\n        victoryPoints: 1,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 2 },\n        { gem: Constants.Gems.GREEN, qty: 3 },\n        { gem: Constants.Gems.BLACK, qty: 3 }]\n    },\n    {\n        id: 49,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 3 },\n        { gem: Constants.Gems.WHITE, qty: 5 }]\n    },\n    {\n        id: 50,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 2 },\n        { gem: Constants.Gems.BLACK, qty: 4 },\n        { gem: Constants.Gems.RED, qty: 1 }]\n    },\n    {\n        id: 51,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 5 }]\n    },\n    {\n        id: 52,\n        level: 2,\n        victoryPoints: 3,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 6 }]\n    },\n    {\n        id: 53,\n        level: 2,\n        victoryPoints: 1,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 3 },\n        { gem: Constants.Gems.RED, qty: 2 },\n        { gem: Constants.Gems.BLACK, qty: 2 }]\n    },\n    {\n        id: 54,\n        level: 2,\n        victoryPoints: 1,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 2 },\n        { gem: Constants.Gems.BLUE, qty: 3 },\n        { gem: Constants.Gems.RED, qty: 3 }]\n    },\n    {\n        id: 55,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 1 },\n        { gem: Constants.Gems.BLACK, qty: 2 },\n        { gem: Constants.Gems.RED, qty: 4 }]\n    },\n    {\n        id: 56,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.BLACK, qty: 3 },\n        { gem: Constants.Gems.RED, qty: 5 }]\n    },\n    {\n        id: 57,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.RED, qty: 5 }]\n    },\n    {\n        id: 58,\n        level: 2,\n        victoryPoints: 3,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 6 }]\n    },\n    {\n        id: 59,\n        level: 2,\n        victoryPoints: 1,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 },\n        { gem: Constants.Gems.GREEN, qty: 2 },\n        { gem: Constants.Gems.RED, qty: 3 }]\n    },\n    {\n        id: 60,\n        level: 2,\n        victoryPoints: 1,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 2 },\n        { gem: Constants.Gems.BLUE, qty: 3 },\n        { gem: Constants.Gems.BLACK, qty: 2 }]\n    },\n    {\n        id: 61,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 4 },\n        { gem: Constants.Gems.BLUE, qty: 2 },\n        { gem: Constants.Gems.BLACK, qty: 1 }]\n    },\n    {\n        id: 62,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 3 },\n        { gem: Constants.Gems.BLUE, qty: 5 }]\n    },\n    {\n        id: 63,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 5 }]\n    },\n    {\n        id: 64,\n        level: 2,\n        victoryPoints: 3,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 6 }]\n    },\n    {\n        id: 65,\n        level: 2,\n        victoryPoints: 1,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 2 },\n        { gem: Constants.Gems.RED, qty: 2 },\n        { gem: Constants.Gems.BLACK, qty: 3 }]\n    },\n    {\n        id: 66,\n        level: 2,\n        victoryPoints: 1,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 3 },\n        { gem: Constants.Gems.RED, qty: 2 },\n        { gem: Constants.Gems.BLACK, qty: 3 }]\n    },\n    {\n        id: 67,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 1 },\n        { gem: Constants.Gems.BLUE, qty: 4 },\n        { gem: Constants.Gems.GREEN, qty: 2 }]\n    },\n    {\n        id: 68,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 },\n        { gem: Constants.Gems.BLACK, qty: 5 }]\n    },\n    {\n        id: 69,\n        level: 2,\n        victoryPoints: 2,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.BLACK, qty: 5 }]\n    },\n    {\n        id: 70,\n        level: 2,\n        victoryPoints: 3,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.RED, qty: 6 }]\n    },\n    {\n        id: 71,\n        level: 3,\n        victoryPoints: 3,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 },\n        { gem: Constants.Gems.BLUE, qty: 3 },\n        { gem: Constants.Gems.GREEN, qty: 5 },\n        { gem: Constants.Gems.RED, qty: 3 }]\n    },\n    {\n        id: 72,\n        level: 3,\n        victoryPoints: 4,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.RED, qty: 7 }]\n    },\n    {\n        id: 73,\n        level: 3,\n        victoryPoints: 4,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 3 },\n        { gem: Constants.Gems.RED, qty: 6 },\n        { gem: Constants.Gems.BLACK, qty: 3 }]\n    },\n    {\n        id: 74,\n        level: 3,\n        victoryPoints: 5,\n        gem: Constants.Gems.BLACK,\n        cost: [{ gem: Constants.Gems.RED, qty: 7 },\n        { gem: Constants.Gems.BLACK, qty: 3 }]\n    },\n    {\n        id: 75,\n        level: 3,\n        victoryPoints: 3,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 },\n        { gem: Constants.Gems.GREEN, qty: 3 },\n        { gem: Constants.Gems.RED, qty: 3 },\n        { gem: Constants.Gems.BLACK, qty: 5 }]\n    },\n    {\n        id: 76,\n        level: 3,\n        victoryPoints: 4,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 7 }]\n    },\n    {\n        id: 77,\n        level: 3,\n        victoryPoints: 4,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 6 },\n        { gem: Constants.Gems.BLUE, qty: 3 },\n        { gem: Constants.Gems.BLACK, qty: 3 }]\n    },\n    {\n        id: 78,\n        level: 3,\n        victoryPoints: 5,\n        gem: Constants.Gems.BLUE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 7 },\n        { gem: Constants.Gems.BLUE, qty: 3 }]\n    },\n    {\n        id: 79,\n        level: 3,\n        victoryPoints: 3,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 3 },\n        { gem: Constants.Gems.BLUE, qty: 3 },\n        { gem: Constants.Gems.RED, qty: 5 },\n        { gem: Constants.Gems.BLACK, qty: 3 }]\n    },\n    {\n        id: 80,\n        level: 3,\n        victoryPoints: 4,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.BLACK, qty: 7 }]\n    },\n    {\n        id: 81,\n        level: 3,\n        victoryPoints: 4,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 },\n        { gem: Constants.Gems.RED, qty: 3 },\n        { gem: Constants.Gems.BLACK, qty: 6 }]\n    },\n    {\n        id: 82,\n        level: 3,\n        victoryPoints: 5,\n        gem: Constants.Gems.WHITE,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 },\n        { gem: Constants.Gems.BLACK, qty: 7 }]\n    },\n    {\n        id: 83,\n        level: 3,\n        victoryPoints: 3,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 5 },\n        { gem: Constants.Gems.BLACK, qty: 3 },\n        { gem: Constants.Gems.BLUE, qty: 3 },\n        { gem: Constants.Gems.RED, qty: 3 }]\n    },\n    {\n        id: 84,\n        level: 3,\n        victoryPoints: 4,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 7 }]\n    },\n    {\n        id: 85,\n        level: 3,\n        victoryPoints: 4,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 },\n        { gem: Constants.Gems.BLUE, qty: 6 },\n        { gem: Constants.Gems.GREEN, qty: 3 }]\n    },\n    {\n        id: 86,\n        level: 3,\n        victoryPoints: 5,\n        gem: Constants.Gems.GREEN,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 7 },\n        { gem: Constants.Gems.GREEN, qty: 3 }]\n    },\n    {\n        id: 87,\n        level: 3,\n        victoryPoints: 3,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.WHITE, qty: 3 },\n        { gem: Constants.Gems.BLUE, qty: 5 },\n        { gem: Constants.Gems.GREEN, qty: 3 },\n        { gem: Constants.Gems.BLACK, qty: 3 }]\n    },\n    {\n        id: 88,\n        level: 3,\n        victoryPoints: 4,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 7 }]\n    },\n    {\n        id: 89,\n        level: 3,\n        victoryPoints: 4,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.BLUE, qty: 3 },\n        { gem: Constants.Gems.GREEN, qty: 6 },\n        { gem: Constants.Gems.RED, qty: 3 }]\n    },\n    {\n        id: 90,\n        level: 3,\n        victoryPoints: 5,\n        gem: Constants.Gems.RED,\n        cost: [{ gem: Constants.Gems.GREEN, qty: 7 },\n        { gem: Constants.Gems.RED, qty: 3 }]\n    }\n];\n\nexport default cards;","import Constants from './constants';\n\nconst nobles = [\n    {\n        id: 1,\n        victoryPoints: 3,\n        imageCode: \"CAT_MEDICI\",\n        cost: [{ gem: Constants.Gems.GREEN, qty: 3 },\n            { gem: Constants.Gems.BLUE, qty: 3 },\n            { gem: Constants.Gems.RED, qty: 3 }]\n    },\n    {\n        id: 2,\n        victoryPoints: 3,\n        imageCode: \"ELI_AUSTRIA\",\n        cost: [{ gem: Constants.Gems.BLUE, qty: 3 },\n            { gem: Constants.Gems.BLACK, qty: 3 },\n            { gem: Constants.Gems.WHITE, qty: 3 }]\n    },\n    {\n        id: 3,\n        victoryPoints: 3,\n        imageCode: \"ISA_CASTILE\",\n        cost: [{ gem: Constants.Gems.BLACK, qty: 4 },\n            { gem: Constants.Gems.WHITE, qty: 4 }]\n    },\n    {\n        id: 4,\n        victoryPoints: 3,\n        imageCode: \"NIC_MACHIA\",\n        cost: [{ gem: Constants.Gems.BLUE, qty: 4 },\n            { gem: Constants.Gems.WHITE, qty: 4 }]\n    },\n    {\n        id: 5,\n        victoryPoints: 3,\n        imageCode: \"SUL_MAGNI\",\n        cost: [{ gem: Constants.Gems.BLUE, qty: 4 },\n            { gem: Constants.Gems.GREEN, qty: 4 }]\n    },\n    {\n        id: 6,\n        victoryPoints: 3,\n        imageCode: \"ANN_BRITAN\",\n        cost: [{ gem: Constants.Gems.GREEN, qty: 3 },\n            { gem: Constants.Gems.BLUE, qty: 3 },\n            { gem: Constants.Gems.WHITE, qty: 3 }]\n    },\n    {\n        id: 7,\n        victoryPoints: 3,\n        imageCode: \"CHARLES_V\",\n        cost: [{ gem: Constants.Gems.BLACK, qty: 3 },\n            { gem: Constants.Gems.RED, qty: 3 },\n            { gem: Constants.Gems.WHITE, qty: 3 }]\n    },\n    {\n        id: 8,\n        victoryPoints: 3,\n        imageCode: \"FRAN_FRANCE\",\n        cost: [{ gem: Constants.Gems.BLACK, qty: 3 },\n            { gem: Constants.Gems.RED, qty: 3 },\n            { gem: Constants.Gems.GREEN, qty: 3 }]\n    },\n    {\n        id: 9,\n        victoryPoints: 3,\n        imageCode: \"HENRY_VIII\",\n        cost: [{ gem: Constants.Gems.BLACK, qty: 4 },\n            { gem: Constants.Gems.RED, qty: 4 }]\n    },\n    {\n        id: 10,\n        victoryPoints: 3,\n        imageCode: \"MARY_STUART\",\n        cost: [{ gem: Constants.Gems.GREEN, qty: 4 },\n            { gem: Constants.Gems.RED, qty: 4 }]\n    }\n];\n\nexport default nobles;","// import actions from actions file\nimport { START_GAME, REMOVE_TOKEN_FROM_BOARD, ADD_TOKEN_TO_BOARD, PLAYER_TAKE_CARD, PLAYER_RESERVE_CARD, END_PLAYER_TURN } from '../actions';\nimport tokens from '../../common/tokens';\nimport cards from '../../common/cards';\nimport nobles from '../../common/nobles';\nimport { getRandomInt, shuffleCards } from '../../helpers';\nimport _ from 'lodash';\n\n// set initial game state with game tokens, setting quantity tokens(tokenQty, goldQty)\n// game token quantity is based on number of players, players always start with 0\nconst initialState = {\n  tokens: tokens(7, 5),\n  gameState: 'initializing'\n}\n\n// Use the initialState as a default value\nexport default function game(state = initialState, action) {\n  switch (action.type) {\n    // To start game: add players to state and set default values, set player first turn, shuffle cards and nobles\n    case (START_GAME): {\n      let firstTurn = getRandomInt(action.players.length);\n      let players = _.map(action.players, function (player, i) {\n        return _.assign(player, {\n          id: i,\n          name: player.name,\n          type: player.type,\n          active: firstTurn === i,\n          tokens: tokens(0, 0),\n          gems: tokens(0, 0),\n          reserved: [],\n          victoryPoints: 0\n        });\n      })\n\n      return {\n        ...state, gameState: 'started', players, cards: shuffleCards(cards), nobles: shuffleCards(nobles).slice(0, 4)\n      }\n    }\n    // Find index of removed token from state; Remove token to board tokens and add to player tokens\n    case (REMOVE_TOKEN_FROM_BOARD): {\n      return {\n        ...state,\n        tokens: state.tokens.map((token, i) => action.chips.includes(token.id) ? { ...token, qty: token.qty - 1 } : token),\n        players: state.players.map((player, i) => player.active ?\n          {\n            ...player,\n            tokens: player.tokens.map((token, x) => action.chips.includes(token.id) ? { ...token, qty: token.qty + 1 } : token),\n          }\n          : player)\n      }\n    }\n    // Find index of removed token from state; Remove token from player tokens and add to board tokens\n    case (ADD_TOKEN_TO_BOARD): {\n      let tokenIndex = _.findIndex(state.tokens, function (token) { return token.id === action.id })\n      return {\n        ...state,\n        tokens: state.tokens.map((token, i) => i === tokenIndex ? { ...token, qty: token.qty + 1 } : token),\n        players: state.players.map((player, i) => player.active ?\n          {\n            ...player,\n            tokens: player.tokens.map((token, x) => x === tokenIndex ? { ...token, qty: token.qty - 1 } : token),\n          }\n          : player)\n      }\n    }\n    // Purchase card for player, remove card from board, give card to player\n    case (PLAYER_TAKE_CARD): {\n      // take card from board by removing from card array\n      let cardIndex = _.findIndex(state.cards, function (card) { return card.id === action.card.id })\n      let gemIndex = _.findIndex(state.tokens, function (token) { return token.gem === action.card.gem })\n      const cloneCards = [...state.cards]\n      cloneCards.splice(cardIndex, 1)\n      // this should put a new card on the board - how do we preserve the location? \n      // add to players cards\n      return {\n        ...state,\n        cards: cloneCards,\n        players: state.players.map((player, i) => player.active ?\n          {\n            ...player,\n            gems: player.gems.map((gem, x) => x === gemIndex ? { ...gem, qty: gem.qty + 1 } : gem),\n            victoryPoints: player.victoryPoints + action.card.victoryPoints\n          }\n          : player)\n      }\n    }\n    // Player reserve card: remove gold token from board, add gold token to player\n    // Add card to players reserved card and remove from deck\n    case (PLAYER_RESERVE_CARD): {\n      // gold token index\n      let tokenIndex = _.findIndex(state.tokens, function (token) { return token.gem === \"GOLD\" })\n      // set card level to get from state array, remove reserved card, find next card\n      // TO DO: replace card with next card to avoid rearrangement\n      let cardIndex = _.findIndex(state.cards, function (card) { return card.id === action.card.id })\n      const cloneCards = [...state.cards]\n      cloneCards.splice(cardIndex, 1)\n\n      return {\n        ...state,\n        cards: cloneCards,\n        tokens: state.tokens.map((token, i) => i === tokenIndex ? { ...token, qty: token.qty - 1 } : token),\n        players: state.players.map((player, i) => player.active ?\n          {\n            ...player,\n            reserved: [...player.reserved, action.card],\n            tokens: player.tokens.map((token, x) => x === tokenIndex ? { ...token, qty: token.qty + 1 } : token),\n          }\n          : player)\n      }\n    }\n    // Find current player and choose the next player based on the number of players\n    case (END_PLAYER_TURN): {\n      let currentPlayer = _.findIndex(state.players, function (player) { return player.active })\n      let nextPlayerIndex = currentPlayer + 1;\n      if (!state.players[nextPlayerIndex]) {\n        nextPlayerIndex = 0;\n      }\n      return {\n        ...state,\n        players: state.players.map((player, i) => ({\n          ...player,\n          active: i === nextPlayerIndex\n        }))\n      };\n    }\n    default:\n      // If this reducer doesn't recognize the action type, or doesn't\n      // care about this specific action, return the existing state unchanged\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport game from './gameReducer';\n\n//  combine reducers\nexport default combineReducers({\n    game\n})","import { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './reducers';\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV !== 'production'\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}